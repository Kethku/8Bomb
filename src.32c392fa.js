parcelRequire=function(e,r,n,t){var i="function"==typeof parcelRequire&&parcelRequire,o="function"==typeof require&&require;function u(n,t){if(!r[n]){if(!e[n]){var f="function"==typeof parcelRequire&&parcelRequire;if(!t&&f)return f(n,!0);if(i)return i(n,!0);if(o&&"string"==typeof n)return o(n);var c=new Error("Cannot find module '"+n+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[n][1][r]||r},p.cache={};var l=r[n]=new u.Module(n);e[n][0].call(l.exports,p,l,l.exports,this)}return r[n].exports;function p(e){return u(p.resolve(e))}}u.isParcelRequire=!0,u.Module=function(e){this.id=e,this.bundle=u,this.exports={}},u.modules=e,u.cache=r,u.parent=i,u.register=function(r,n){e[r]=[function(e,r){r.exports=n},{}]};for(var f=0;f<n.length;f++)u(n[f]);if(n.length){var c=u(n[n.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=c:"function"==typeof define&&define.amd?define(function(){return c}):t&&(this[t]=c)}return u}({"yclZ":[function(require,module,exports) {

},{}],"l0ul":[function(require,module,exports) {
function o(o,d,e){return o==o&&(void 0!==e&&(o=o<=e?o:e),void 0!==d&&(o=o>=d?o:d)),o}module.exports=o;
},{}],"u9vI":[function(require,module,exports) {
function n(n){var o=typeof n;return null!=n&&("object"==o||"function"==o)}module.exports=n;
},{}],"j3D9":[function(require,module,exports) {
var global = arguments[3];
var e=arguments[3],t="object"==typeof e&&e&&e.Object===Object&&e;module.exports=t;
},{}],"MIhM":[function(require,module,exports) {
var e=require("./_freeGlobal"),t="object"==typeof self&&self&&self.Object===Object&&self,l=e||t||Function("return this")();module.exports=l;
},{"./_freeGlobal":"j3D9"}],"wppe":[function(require,module,exports) {
var o=require("./_root"),r=o.Symbol;module.exports=r;
},{"./_root":"MIhM"}],"uiOY":[function(require,module,exports) {
var r=require("./_Symbol"),t=Object.prototype,e=t.hasOwnProperty,o=t.toString,a=r?r.toStringTag:void 0;function l(r){var t=e.call(r,a),l=r[a];try{r[a]=void 0;var c=!0}catch(n){}var i=o.call(r);return c&&(t?r[a]=l:delete r[a]),i}module.exports=l;
},{"./_Symbol":"wppe"}],"lPmd":[function(require,module,exports) {
var t=Object.prototype,o=t.toString;function r(t){return o.call(t)}module.exports=r;
},{}],"e5TX":[function(require,module,exports) {
var e=require("./_Symbol"),r=require("./_getRawTag"),o=require("./_objectToString"),t="[object Null]",i="[object Undefined]",n=e?e.toStringTag:void 0;function u(e){return null==e?void 0===e?i:t:n&&n in Object(e)?r(e):o(e)}module.exports=u;
},{"./_Symbol":"wppe","./_getRawTag":"uiOY","./_objectToString":"lPmd"}],"OuyB":[function(require,module,exports) {
function e(e){return null!=e&&"object"==typeof e}module.exports=e;
},{}],"bgO7":[function(require,module,exports) {
var e=require("./_baseGetTag"),r=require("./isObjectLike"),o="[object Symbol]";function t(t){return"symbol"==typeof t||r(t)&&e(t)==o}module.exports=t;
},{"./_baseGetTag":"e5TX","./isObjectLike":"OuyB"}],"iS0Z":[function(require,module,exports) {
var e=require("./isObject"),r=require("./isSymbol"),t=NaN,i=/^\s+|\s+$/g,f=/^[-+]0x[0-9a-f]+$/i,u=/^0b[01]+$/i,n=/^0o[0-7]+$/i,s=parseInt;function a(a){if("number"==typeof a)return a;if(r(a))return t;if(e(a)){var o="function"==typeof a.valueOf?a.valueOf():a;a=e(o)?o+"":o}if("string"!=typeof a)return 0===a?a:+a;a=a.replace(i,"");var l=u.test(a);return l||n.test(a)?s(a.slice(2),l?2:8):f.test(a)?t:+a}module.exports=a;
},{"./isObject":"u9vI","./isSymbol":"bgO7"}],"Jqm6":[function(require,module,exports) {
var e=require("./_baseClamp"),r=require("./toNumber");function o(o,i,u){return void 0===u&&(u=i,i=void 0),void 0!==u&&(u=(u=r(u))==u?u:0),void 0!==i&&(i=(i=r(i))==i?i:0),e(r(o),i,u)}module.exports=o;
},{"./_baseClamp":"l0ul","./toNumber":"iS0Z"}],"gGJU":[function(require,module,exports) {
function n(n){return null==n}module.exports=n;
},{}],"CE5M":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var r=["rgb(246,214,189)","rgb(195,163,138)","rgb(153,117,119)","rgb(129,98,113)","rgb(78,73,95)","rgb(32,57,79)","rgb(15,42,63)","rgb(8,20,30)"],e=[[246,214,189],[195,163,138],[153,117,119],[129,98,113],[78,73,95],[32,57,79],[15,42,63],[8,20,30]],t={rgb:function(e){return r[e%r.length]},triplet:function(r){return e[r%e.length]},lookup:function(r){for(var t=0;t<e.length;t++){var n=e[t];if(n[0]===r[0]&&n[1]===r[1]&&n[2]===r[2])return t}}},n=t;exports.default=n;
},{}],"HEkL":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var e={"<":[0,0,1,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0],">":[1,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,0],"/":[0,0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,0],":":[0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0],"|":[0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0],"(":[0,1,1,0,1,0,1,0,0,1,0,0],")":[1,0,0,1,0,1,0,1,1,0,0,0],0:[0,1,1,1,0,1,1,0,1,1,0,1,1,1,1,0,0,0],1:[1,1,0,0,1,0,0,1,0,0,1,0,1,1,1,0,0,0],2:[1,1,1,0,0,1,1,1,1,1,0,0,1,1,1,0,0,0],3:[1,1,1,0,0,1,0,1,1,0,0,1,1,1,1,0,0,0],4:[1,0,1,1,0,1,1,1,1,0,0,1,0,0,1,0,0,0],5:[1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,0],6:[1,0,0,1,0,0,1,1,1,1,0,1,1,1,1,0,0,0],7:[1,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0],8:[1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,0,0,0],9:[1,1,1,1,0,1,1,1,1,0,0,1,0,0,1,0,0,0]," ":[0,0,0,0,0,0,0,0,0,0,0,0],".":[0,0,0,0,1,0],",":[0,0,0,0,1,1],"+":[0,0,0,0,1,0,1,1,1,0,1,0,0,0,0,0,0,0],"-":[0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0],"!":[1,1,1,0,1,0],"?":[1,1,0,1,1,1,0,0,1,0,0,0],a:[1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,0,0,0],b:[1,1,0,1,0,1,1,1,0,1,0,1,1,1,1,0,0,0],c:[1,1,1,1,0,0,1,0,0,1,0,0,1,1,1,0,0,0],d:[1,1,0,1,0,1,1,0,1,1,0,1,1,1,1,0,0,0],e:[1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,0,0,0],f:[1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,0,0,0],g:[1,1,1,1,0,0,1,0,1,1,0,1,1,1,1,0,0,0],h:[1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,0,0,0],i:[1,1,1,0,1,0,0,1,0,0,1,0,1,1,1,0,0,0],j:[0,0,1,0,0,1,0,0,1,1,0,1,1,1,1,0,0,0],k:[1,0,1,1,0,1,1,1,0,1,0,1,1,0,1,0,0,0],l:[1,0,0,1,0,0,1,0,0,1,0,0,1,1,1,0,0,0],m:[1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,0,0,0],n:[1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,0,0,0],o:[1,1,1,1,0,1,1,0,1,1,0,1,1,1,1,0,0,0],p:[1,1,1,1,0,1,1,1,1,1,0,0,1,0,0,0,0,0],q:[1,1,1,1,0,1,1,0,1,1,0,1,0,1,1,0,0,0],r:[1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,0,0,0],s:[1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,0],t:[1,1,1,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0],u:[1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,0,0,0],v:[1,0,1,1,0,1,1,0,1,1,0,1,1,1,0,0,0,0],w:[1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,0,0,0],x:[1,0,1,1,0,1,0,1,0,1,0,1,1,0,1,0,0,0],y:[1,0,1,1,0,1,1,1,1,0,0,1,1,1,1,0,0,0],z:[1,1,1,0,0,1,0,1,0,1,0,0,1,1,1,0,0,0]},t=e;exports.default=t;
},{}],"OEhm":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var e=r(require("./colors.js")),t=r(require("./alphabet.js"));function r(e){return e&&e.__esModule?e:{default:e}}function n(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(t){o(e,t,r[t])})}return e}function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e){return u(e)||f(e)||a()}function a(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function f(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function u(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}var c=function(r){var o=r.x,a=r.y,f=r.letters,u=r.c,c=r.ctx,l=e.default.triplet(u);f.toString().split("").map(function(e){var r=t.default[e.toLowerCase()];return{width:r?r.length/6:3,letter:e,pixels:r}}).reduce(function(e,t,r){var o=e[r-1],a=o?o.width+1+o.xOffset:0,f=o?o.yOffset:0;return[].concat(i(e),[n({},t,{xOffset:a,yOffset:f})])},[]).filter(function(e){return e.pixels}).forEach(function(e){var t=e.pixels,r=e.xOffset,n=e.yOffset,i=e.width,f=c.getImageData(o+r,a+n,i,6),u=f.data;t.map(function(e,t){return{pixel:e,pixelIndex:t}}).filter(function(e){return e.pixel}).forEach(function(e){var t=4*e.pixelIndex;u[t+0]=l[0],u[t+1]=l[1],u[t+2]=l[2],u[t+3]=255}),c.putImageData(f,o+r,a+n)})},l=c;exports.default=l;
},{"./colors.js":"CE5M","./alphabet.js":"HEkL"}],"Focm":[function(require,module,exports) {
"use strict";var _fs=require("fs"),_clamp=_interopRequireDefault(require("lodash/clamp")),_isNil=_interopRequireDefault(require("lodash/isNil")),_colors=_interopRequireDefault(require("./colors")),_print=_interopRequireDefault(require("./print"));function _interopRequireDefault(r){return r&&r.__esModule?r:{default:r}}var gameCode='// title: Destructible Terrain\r\n\r\n// Dev log can be found at http://02credits.com/projects/8bomb/\r\n// The change set is described here: http://02credits.com/blog/day15-8bomb-physics/\r\n// Update described here: http://02credits.com/blog/day17-8bomb-camera/\r\n// Update described here: http://02credits.com/blog/day18-8bomb-camera-fixes/\r\n\r\nfunction initTerrain() {\r\n  let terrain = [];\r\n  for (let y = 0; y < 300; y++) {\r\n    let row = [];\r\n    for (let x = 0; x < 128; x++) {\r\n      if (y > 90) {\r\n        row.push(1);\r\n      } else {\r\n        row.push(0);\r\n      }\r\n    }\r\n    terrain.push(row);\r\n  }\r\n  return terrain;\r\n}\r\n\r\nfunction createPhysicsObject(x, y, sprite) {\r\n  return {\r\n    previous: {\r\n      x,\r\n      y\r\n    },\r\n    position: {\r\n      x,\r\n      y\r\n    },\r\n    radius: 4,\r\n    sprite,\r\n    grounded: false\r\n  };\r\n}\r\n\r\ninitialState = {\r\n  terrain: initTerrain(),\r\n  player: createPhysicsObject(20, 20, 0),\r\n  bombs: [],\r\n  cameraY: 0,\r\n  score: 0\r\n};\r\n\r\nfunction terrainAt(x, y, terrain) {\r\n  if (terrain[y]) {\r\n    return terrain[y][x];\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction getPhysicsObjects({ player, bombs }) {\r\n  return [player].concat(bombs);\r\n}\r\nconst gravity = 0.07;\r\nconst cameraMomentum = 0.8;\r\nconst cameraLag = 0.2;\r\nconst maxSpeed = 5;\r\nconst groundFriction = 0.99;\r\n\r\nfunction updatePhysicsObjects(objects) {\r\n  for (const obj of objects) {\r\n    let vx = obj.position.x - obj.previous.x;\r\n    let vy = obj.position.y - obj.previous.y;\r\n\r\n    let speed = Math.sqrt(vx * vx + vy * vy);\r\n    if (speed > maxSpeed) {\r\n      vx = vx * maxSpeed / speed;\r\n      vy = vy * maxSpeed / speed;\r\n    } else if(obj.grounded) {\r\n      vx = vx * groundFriction;\r\n      vy = vy * groundFriction;\r\n    }\r\n\r\n    obj.previous.x = obj.position.x;\r\n    obj.previous.y = obj.position.y;\r\n    vy += gravity;\r\n\r\n    obj.position.x += vx;\r\n    obj.position.y += vy;\r\n\r\n    if (obj.position.x - obj.radius < 0) {\r\n      obj.position.x = obj.radius;\r\n    }\r\n\r\n    if (obj.position.x + obj.radius > 128) {\r\n      obj.position.x = 128 - obj.radius;\r\n    }\r\n  }\r\n\r\n  for (const first of objects) {\r\n    for (const second of objects) {\r\n      if (first == second) continue;\r\n      let dx = first.position.x - second.position.x;\r\n      let dy = first.position.y - second.position.y;\r\n\r\n      let distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      if (distance < first.radius + second.radius) {\r\n        if (dy < 0) first.grounded = true;\r\n        else second.grounded = true;\r\n        let amount = first.radius + second.radius - distance;\r\n\r\n        let nx = dx / distance;\r\n        let ny = dy / distance;\r\n\r\n        first.position.x += nx * amount / 2;\r\n        first.position.y += ny * amount / 2;\r\n        second.position.x -= nx * amount / 2;\r\n        second.position.y -= ny * amount / 2;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction handleTerrainCollisions(terrain, objects) {\r\n  for (let i = 0; i < 5; i++) {\r\n    for (const obj of objects) {\r\n      let totalX = 0;\r\n      let totalY = 0;\r\n      let count = 0;\r\n      for (let r = 0; r < Math.PI * 2; r += Math.PI / 8) {\r\n        let dx = Math.cos(r) * obj.radius;\r\n        let dy = Math.sin(r) * obj.radius;\r\n        let x = Math.floor(obj.position.x + dx);\r\n        let y = Math.floor(obj.position.y + dy);\r\n\r\n        if (terrainAt(x, y, terrain)) {\r\n          if (dy > 3) {\r\n            obj.grounded = true;\r\n          }\r\n          totalX += dx;\r\n          totalY += dy;\r\n          count++;\r\n        }\r\n      }\r\n      if (count == 0) {\r\n        continue;\r\n      }\r\n\r\n      let dx = totalX / count;\r\n      let dy = totalY / count;\r\n\r\n      let length = Math.sqrt(dx * dx + dy * dy);\r\n      let nx = dx / length;\r\n      let ny = dy / length;\r\n\r\n      let displacement = obj.radius - length;\r\n\r\n      obj.position.x -= nx * displacement * 0.3;\r\n      obj.position.y -= ny * displacement * 0.3;\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateCamera(state) {\r\n  if (state.previousCameraY) {\r\n    let vy = state.cameraY - state.previousCameraY;\r\n    state.previousCameraY = state.cameraY;\r\n    state.cameraY += vy * cameraMomentum;\r\n  }\r\n\r\n  if (state.player.position.y > state.cameraY + 96) {\r\n    let cameraDiff = state.player.position.y - (state.cameraY + 96);\r\n    state.cameraY += cameraDiff * cameraLag;\r\n  }\r\n\r\n  if (state.player.position.y < state.cameraY + 32) {\r\n    let cameraDiff = state.player.position.y - (state.cameraY + 32);\r\n    state.cameraY += cameraDiff * 0.2;\r\n  }\r\n\r\n  if (!state.previousCameraY) {\r\n    state.previousCameraY = state.cameraY;\r\n  }\r\n}\r\n\r\nfunction updateScore(state) {\r\n  if (state.player.position.y > state.score) {\r\n    state.score = state.player.position.y;\r\n  }\r\n}\r\nfunction drawTerrain({ terrain, cameraY }) {\r\n  let top = Math.max(0, Math.floor(cameraY));\r\n  let bottom = Math.min(Math.floor(cameraY + 128), terrain.length);\r\n  for (let y = top; y < bottom; y++) {\r\n    for (let x = 0; x < terrain[y].length - 1; x++) {\r\n      if (terrainAt(x, y, terrain)) {\r\n        if (!terrainAt(x, y - 1, terrain)) {\r\n          setPixel(x, y, 0);\r\n        } else if (!terrainAt(x, y + 1, terrain)) {\r\n          setPixel(x, y, 2);\r\n        } else {\r\n          setPixel(x, y, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction drawPhysicsObjects(objects) {\r\n  for (let obj of objects) {\r\n    sprite(obj.position.x - obj.radius, obj.position.y - obj.radius, obj.sprite);\r\n  }\r\n}\r\n\r\nfunction drawScoreMarker({ score }) {\r\n  sprite(0, score, 1);\r\n  sprite(120, score, 1, 0, true);\r\n}\r\n\r\nfunction drawInstructions() {\r\n  print(5, 5, "left/right to move");\r\n  print(5, 13, "up to jump");\r\n  print(5, 21, "a to cut terrain");\r\n}\r\nconst fuzeTime = 100;\r\nconst fuzeSpeed = 0.75;\r\nconst bombRadius = 30;\r\nconst knockBack = 50;\r\n\r\nfunction spawnBombs({ player,  bombs, score }) {\r\n  if (Math.random() * 100 <= 0.5 * (score / 100)) {\r\n    bombs.push(createPhysicsObject(Math.random() * 112 + 8, player.position.y - 300, 2));\r\n  }\r\n}\r\n\r\nfunction updateBombs(state) {\r\n  let bombsToExplode = [];\r\n  let remainingBombs = [];\r\n\r\n  for (const bomb of state.bombs) {\r\n    if (bomb.timeLeft != undefined) {\r\n      bomb.sprite = 2;\r\n      bomb.timeLeft -= 1;\r\n      if (bomb.timeLeft <= 0) {\r\n        bomb.fuze = bomb.fuze * 0.75;\r\n        if (bomb.fuze < 1) {\r\n          bombsToExplode.push(bomb);\r\n          continue;\r\n        } else {\r\n          bomb.timeLeft = bomb.fuze;\r\n          bomb.sprite = 3;\r\n        }\r\n      }\r\n    } else if (bomb.grounded) {\r\n      bomb.timeLeft = fuzeTime;\r\n      bomb.fuze = fuzeTime;\r\n    }\r\n\r\n    remainingBombs.push(bomb);\r\n  }\r\n\r\n  state.bombs = remainingBombs;\r\n\r\n  let physicsObjects = getPhysicsObjects(state);\r\n\r\n  for (const bomb of bombsToExplode) {\r\n    cutTerrain(bomb.position.x, bomb.position.y, bombRadius, state.terrain);\r\n    for (const object of physicsObjects) {\r\n      let dx = object.position.x - bomb.position.x;\r\n      let dy = object.position.y - bomb.position.y;\r\n\r\n      let length = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      let nx = dx / length;\r\n      let ny = dy / length;\r\n\r\n      object.position.x += nx * knockBack / length;\r\n      object.position.y += ny * knockBack / length;\r\n    }\r\n  }\r\n}\r\nfunction cutTerrain(x, y, r, terrain) {\r\n  for (let cx = Math.floor(x - r); cx <= x + r; cx++) {\r\n    for (let cy = Math.floor(y - r); cy <= y + r; cy++) {\r\n      let dx = cx - x;\r\n      let dy = cy - y;\r\n      let cr = Math.floor(Math.sqrt(dx * dx + dy * dy));\r\n\r\n      if (cr > r) continue;\r\n\r\n      if (cy >= 0 && cy < terrain.length) {\r\n        let row = terrain[cy];\r\n        if (cx >= 0 && cx < row.length) {\r\n          row[cx] = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\nconst runSpeed = 0.05;\r\nconst airSpeed = 0.01;\r\nconst jumpSpeed = 2;\r\n\r\nfunction handleInput(input, player, terrain) {\r\n  let speed = player.grounded ? runSpeed : airSpeed;\r\n  if (input.left) {\r\n    player.position.x -= speed;\r\n  }\r\n  if (input.right) {\r\n    player.position.x += speed;\r\n  }\r\n\r\n  if (input.upPressed && player.grounded) {\r\n    player.previous.y += jumpSpeed;\r\n    player.grounded = false;\r\n  }\r\n\r\n  if (input.a) {\r\n    cutTerrain(player.position.x, player.position.y, 20, terrain);\r\n  }\r\n}\r\n\r\nupdate = (state, input) => {\r\n  let physicsObjects = getPhysicsObjects(state);\r\n  updatePhysicsObjects(physicsObjects);\r\n  handleTerrainCollisions(state.terrain, physicsObjects);\r\n  handleInput(input, state.player, state.terrain);\r\n  updateCamera(state);\r\n  updateScore(state);\r\n\r\n  spawnBombs(state);\r\n  updateBombs(state);\r\n};\r\n\r\ndraw = state => {\r\n  let physicsObjects = getPhysicsObjects(state);\r\n  clear();\r\n  camera(0, Math.floor(state.cameraY));\r\n  drawTerrain(state);\r\n  drawPhysicsObjects(physicsObjects);\r\n  drawScoreMarker(state);\r\n  drawInstructions(state);\r\n};\r\n\r\nsprites = {\r\n  "0": [\r\n    "  3333  ",\r\n    " 333333 ",\r\n    "33333333",\r\n    "33333333",\r\n    "33333333",\r\n    "33333333",\r\n    " 333333 ",\r\n    "  3333  "\r\n  ],\r\n  "1": [\r\n    "5       ",\r\n    "65      ",\r\n    "465     ",\r\n    "3465    ",\r\n    "3465    ",\r\n    "465     ",\r\n    "65      ",\r\n    "5       "\r\n  ],\r\n  "2": [\r\n    "  6666  ",\r\n    " 664466 ",\r\n    "66644666",\r\n    "66644666",\r\n    "66644666",\r\n    "66666666",\r\n    " 664466 ",\r\n    "  6666  "\r\n  ],\r\n  "3": [\r\n    "  4444  ",\r\n    " 442244 ",\r\n    "44422444",\r\n    "44422444",\r\n    "44422444",\r\n    "44444444",\r\n    " 442244 ",\r\n    "  4444  "\r\n  ]\r\n};\r\n',canvas=document.getElementById("game"),ctx=canvas.getContext("2d"),_cameraX=0,_cameraY=0;function camera(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;_cameraX=Math.floor(r),_cameraY=Math.floor(n),ctx.setTransform(1,0,0,1,0,0),ctx.translate(-_cameraX,-_cameraY)}function setPixel(r,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;ctx.fillStyle=_colors.default.rgb(t),ctx.fillRect(Math.floor(r),Math.floor(n),1,1)}function sprite(r,n,t){var e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,o=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]&&arguments[5];window.sprites[t]&&window.sprites[t].slice(0,8).forEach(function(t,a){t.split("").forEach(function(t,s){if(" "!==t){var c=(0,_clamp.default)(+t-e,0,7);ctx.fillStyle=_colors.default.rgb(c),ctx.fillRect(Math.floor(r)+(o?7-s:s),Math.floor(n)+(i?7-a:a),1,1)}})})}function print(r,n,t){var e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;(0,_print.default)({x:r-_cameraX,y:n-_cameraY,letters:t,c:e,ctx:ctx})}function clear(r){ctx.save(),ctx.setTransform(1,0,0,1,0,0),(0,_isNil.default)(r)?ctx.clearRect(0,0,128,128):(ctx.fillStyle=_colors.default.rgb(r),ctx.fillRect(0,0,128,128)),ctx.restore()}window.initialState="",window.draw=function(){},window.update=function(){},window.sprites={};var currentKeys=new Set;document.addEventListener("keydown",function(r){var n=r.key;return currentKeys.add(n)}),document.addEventListener("keyup",function(r){var n=r.key;return currentKeys.delete(n)}),eval(gameCode);var previousInput={},state=window.initialState;function loop(){var r={},n={up:"ArrowUp",right:"ArrowRight",down:"ArrowDown",left:"ArrowLeft",a:"a",b:"b"};for(var t in n)r[t]=currentKeys.has(n[t]),r[t+"Pressed"]=r[t]&&!previousInput[t],r[t+"Released"]=!r[t]&&previousInput[t];previousInput=r,window.update(state,r),window.draw(state),requestAnimationFrame(loop)}requestAnimationFrame(loop);
},{"fs":"yclZ","lodash/clamp":"Jqm6","lodash/isNil":"gGJU","./colors":"CE5M","./print":"OEhm"}]},{},["Focm"], null)
//# sourceMappingURL=src.f15fea4f.map