{"version":3,"sources":["../node_modules/lodash/_baseClamp.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_root.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/clamp.js","../node_modules/lodash/isNil.js","colors.js","alphabet.js","print.js","index.js"],"names":["colors","rgbs","triplets","rgb","i","length","triplet","lookup","current","alphabet","a","b","c","d","e","f","g","h","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","printText","letters","ctx","color","toString","split","map","letter","pixels","toLowerCase","width","reduce","acc","index","previous","xOffset","yOffset","filter","forEach","grid","imageData","getImageData","data","pixel","pixelIndex","offset","putImageData","gameCode","canvas","document","getElementById","getContext","_cameraX","_cameraY","camera","Math","floor","setTransform","translate","setPixel","fillStyle","fillRect","sprite","spriteIndex","darken","flipH","flipV","window","sprites","slice","cells","rowIndex","colIndex","clamped","print","clear","save","clearRect","restore","initialState","draw","update","currentKeys","Set","addEventListener","key","add","delete","eval","previousInput","state","loop","input","keyNames","has","requestAnimationFrame"],"mappings":"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","file":"src.f15fea4f.map","sourceRoot":"src","sourcesContent":["/**\n * The base implementation of `_.clamp` which doesn't coerce arguments.\n *\n * @private\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n */\nfunction baseClamp(number, lower, upper) {\n  if (number === number) {\n    if (upper !== undefined) {\n      number = number <= upper ? number : upper;\n    }\n    if (lower !== undefined) {\n      number = number >= lower ? number : lower;\n    }\n  }\n  return number;\n}\n\nmodule.exports = baseClamp;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var baseClamp = require('./_baseClamp'),\n    toNumber = require('./toNumber');\n\n/**\n * Clamps `number` within the inclusive `lower` and `upper` bounds.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Number\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n * @example\n *\n * _.clamp(-10, -5, 5);\n * // => -5\n *\n * _.clamp(10, -5, 5);\n * // => 5\n */\nfunction clamp(number, lower, upper) {\n  if (upper === undefined) {\n    upper = lower;\n    lower = undefined;\n  }\n  if (upper !== undefined) {\n    upper = toNumber(upper);\n    upper = upper === upper ? upper : 0;\n  }\n  if (lower !== undefined) {\n    lower = toNumber(lower);\n    lower = lower === lower ? lower : 0;\n  }\n  return baseClamp(toNumber(number), lower, upper);\n}\n\nmodule.exports = clamp;\n","/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n *\n * _.isNil(null);\n * // => true\n *\n * _.isNil(void 0);\n * // => true\n *\n * _.isNil(NaN);\n * // => false\n */\nfunction isNil(value) {\n  return value == null;\n}\n\nmodule.exports = isNil;\n","// TODO: consolidate - avoid duplication\r\nconst rgbs = [\r\n  'rgb(246,214,189)',\r\n  'rgb(195,163,138)',\r\n  'rgb(153,117,119)',\r\n  'rgb(129,98,113)',\r\n  'rgb(78,73,95)',\r\n  'rgb(32,57,79)',\r\n  'rgb(15,42,63)',\r\n  'rgb(8,20,30)'\r\n];\r\n\r\nconst triplets = [\r\n  [246, 214, 189],\r\n  [195, 163, 138],\r\n  [153, 117, 119],\r\n  [129, 98, 113],\r\n  [78, 73, 95],\r\n  [32, 57, 79],\r\n  [15, 42, 63],\r\n  [8, 20, 30]\r\n];\r\n\r\n// const hexes = [\r\n//   '#f6d6bd',\r\n//   '#c3a38a',\r\n//   '#997577',\r\n//   '#816271',\r\n//   '#4e495f',\r\n//   '#20394f',\r\n//   '#0f2a3f',\r\n//   '#08141e'\r\n// ]\r\n\r\nconst colors = {\r\n  rgb (i) {\r\n    return rgbs[i % rgbs.length];\r\n  },\r\n  triplet (i) {\r\n    return triplets[i % triplets.length];\r\n  },\r\n\r\n  // NOTE: if triplet isn't a color in the pallet, this will return undefined.\r\n  lookup (triplet) {\r\n    for (let i = 0; i < triplets.length; i++) {\r\n      let current = triplets[i];\r\n      if (current[0] === triplet[0] &&\r\n          current[1] === triplet[1] &&\r\n          current[2] === triplet[2]) {\r\n        return i;\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport default colors;\r\n","const alphabet = {\r\n  '<': [\r\n    0, 0, 1,\r\n    0, 1, 0,\r\n    1, 0, 0,\r\n    0, 1, 0,\r\n    0, 0, 1,\r\n    0, 0, 0,\r\n  ],\r\n  '>': [\r\n    1, 0, 0,\r\n    0, 1, 0,\r\n    0, 0, 1,\r\n    0, 1, 0,\r\n    1, 0, 0,\r\n    0, 0, 0,\r\n  ],\r\n  '/': [\r\n    0, 0, 0,\r\n    0, 0, 1,\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n    1, 0, 0,\r\n    0, 0, 0,\r\n  ],\r\n  ':': [\r\n    0, 0, 0,\r\n    0, 0, 0,\r\n    0, 1, 0,\r\n    0, 0, 0,\r\n    0, 1, 0,\r\n    0, 0, 0,\r\n  ],\r\n  '|': [\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n    0, 0, 0,\r\n  ],\r\n  '(': [\r\n    0, 1,\r\n    1, 0,\r\n    1, 0,\r\n    1, 0,\r\n    0, 1,\r\n    0, 0,\r\n  ],\r\n  ')': [\r\n    1, 0,\r\n    0, 1,\r\n    0, 1,\r\n    0, 1,\r\n    1, 0,\r\n    0, 0,\r\n  ],\r\n  0: [\r\n    0, 1, 1,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 1, 1,\r\n    0, 0, 0,\r\n  ],\r\n  1: [\r\n    1, 1, 0,\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n    1, 1, 1,\r\n    0, 0, 0,\r\n  ],\r\n  2: [\r\n    1, 1, 1,\r\n    0, 0, 1,\r\n    1, 1, 1,\r\n    1, 0, 0,\r\n    1, 1, 1,\r\n    0, 0, 0,\r\n  ],\r\n  3: [\r\n    1, 1, 1,\r\n    0, 0, 1,\r\n    0, 1, 1,\r\n    0, 0, 1,\r\n    1, 1, 1,\r\n    0, 0, 0,\r\n  ],\r\n  4: [\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 1, 1,\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n    0, 0, 0,\r\n  ],\r\n  5: [\r\n    1, 1, 1,\r\n    1, 0, 0,\r\n    1, 1, 1,\r\n    0, 0, 1,\r\n    1, 1, 1,\r\n    0, 0, 0,\r\n  ],\r\n  6: [\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 1, 1,\r\n    1, 0, 1,\r\n    1, 1, 1,\r\n    0, 0, 0,\r\n  ],\r\n  7: [\r\n    1, 1, 1,\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n    0, 0, 0,\r\n  ],\r\n  8: [\r\n    1, 1, 1,\r\n    1, 0, 1,\r\n    1, 1, 1,\r\n    1, 0, 1,\r\n    1, 1, 1,\r\n    0, 0, 0,\r\n  ],\r\n  9: [\r\n    1, 1, 1,\r\n    1, 0, 1,\r\n    1, 1, 1,\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n    0, 0, 0,\r\n  ],\r\n\r\n  ' ': [\r\n    0, 0,\r\n    0, 0,\r\n    0, 0,\r\n    0, 0,\r\n    0, 0,\r\n    0, 0\r\n  ],\r\n  '.': [\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n  ],\r\n  ',': [\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n  ],\r\n  '+': [\r\n    0, 0, 0,\r\n    0, 1, 0,\r\n    1, 1, 1,\r\n    0, 1, 0,\r\n    0, 0, 0,\r\n    0, 0, 0\r\n  ],\r\n  '-': [\r\n    0, 0, 0,\r\n    0, 0, 0,\r\n    1, 1, 1,\r\n    0, 0, 0,\r\n    0, 0, 0,\r\n    0, 0, 0\r\n  ],\r\n  '!': [\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    1,\r\n    0,\r\n  ],\r\n  '?': [\r\n    1, 1,\r\n    0, 1,\r\n    1, 1,\r\n    0, 0,\r\n    1, 0,\r\n    0, 0,\r\n  ],\r\n  a: [\r\n    1, 1, 1,\r\n    1, 0, 1,\r\n    1, 1, 1,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    0, 0, 0\r\n  ],\r\n  b: [\r\n    1, 1, 0,\r\n    1, 0, 1,\r\n    1, 1, 0,\r\n    1, 0, 1,\r\n    1, 1, 1,\r\n    0, 0, 0\r\n  ],\r\n  c: [\r\n    1, 1, 1,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 1, 1,\r\n    0, 0, 0\r\n  ],\r\n  d: [\r\n    1, 1, 0,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 1, 1,\r\n    0, 0, 0\r\n  ],\r\n  e: [\r\n    1, 1, 1,\r\n    1, 0, 0,\r\n    1, 1, 1,\r\n    1, 0, 0,\r\n    1, 1, 1,\r\n    0, 0, 0\r\n  ],\r\n  f: [\r\n    1, 1, 1,\r\n    1, 0, 0,\r\n    1, 1, 1,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    0, 0, 0\r\n  ],\r\n  g: [\r\n    1, 1, 1,\r\n    1, 0, 0,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 1, 1,\r\n    0, 0, 0\r\n  ],\r\n  h: [\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 1, 1,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    0, 0, 0\r\n  ],\r\n  i: [\r\n    1, 1, 1,\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n    1, 1, 1,\r\n    0, 0, 0\r\n  ],\r\n  j: [\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n    1, 0, 1,\r\n    1, 1, 1,\r\n    0, 0, 0\r\n  ],\r\n  k: [\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 1, 0,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    0, 0, 0\r\n  ],\r\n  l: [\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 1, 1,\r\n    0, 0, 0\r\n  ],\r\n  m: [\r\n    1, 0, 1,\r\n    1, 1, 1,\r\n    1, 1, 1,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    0, 0, 0\r\n  ],\r\n  n: [\r\n    1, 1, 1,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    0, 0, 0\r\n  ],\r\n  o: [\r\n    1, 1, 1,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 1, 1,\r\n    0, 0, 0\r\n  ],\r\n  p: [\r\n    1, 1, 1,\r\n    1, 0, 1,\r\n    1, 1, 1,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    0, 0, 0\r\n  ],\r\n  q: [\r\n    1, 1, 1,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    0, 1, 1,\r\n    0, 0, 0\r\n  ],\r\n  r: [\r\n    1, 1, 1,\r\n    1, 0, 1,\r\n    1, 1, 0,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    0, 0, 0\r\n  ],\r\n  s: [\r\n    1, 1, 1,\r\n    1, 0, 0,\r\n    1, 1, 1,\r\n    0, 0, 1,\r\n    1, 1, 1,\r\n    0, 0, 0\r\n  ],\r\n  t: [\r\n    1, 1, 1,\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n    0, 0, 0\r\n  ],\r\n  u: [\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 1, 1,\r\n    0, 0, 0\r\n  ],\r\n  v: [\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 1, 0,\r\n    0, 0, 0\r\n  ],\r\n  w: [\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 1, 1,\r\n    1, 1, 1,\r\n    1, 0, 1,\r\n    0, 0, 0\r\n  ],\r\n  x: [\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    0, 1, 0,\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    0, 0, 0\r\n  ],\r\n  y: [\r\n    1, 0, 1,\r\n    1, 0, 1,\r\n    1, 1, 1,\r\n    0, 0, 1,\r\n    1, 1, 1,\r\n    0, 0, 0\r\n  ],\r\n  z: [\r\n    1, 1, 1,\r\n    0, 0, 1,\r\n    0, 1, 0,\r\n    1, 0, 0,\r\n    1, 1, 1,\r\n    0, 0, 0\r\n  ],\r\n};\r\n\r\nexport default alphabet;\r\n","import colors from './colors.js';\r\nimport alphabet from './alphabet.js';\r\n\r\nconst printText = ({ x, y, letters, c, ctx }) => {\r\n  const color = colors.triplet(c);\r\n\r\n  const grids = letters\r\n    .toString()\r\n    // Split into individual letters.\r\n    .split('')\r\n    // Get the pixels and the letter's width.\r\n    .map(letter => {\r\n      const pixels = alphabet[letter.toLowerCase()];\r\n      return {\r\n        // If we found a matching letter in the alphabet,\r\n        // return its width.\r\n        // Otherwise if the user tries to print a character\r\n        // we haven't defined, just return 3.\r\n        width: pixels ? pixels.length / 6 : 3,\r\n        letter,\r\n        pixels\r\n      };\r\n    })\r\n    // Calculate running offsets.\r\n    .reduce((acc, current, index) => {\r\n      const previous = acc[index - 1];\r\n      const xOffset = previous ? previous.width + 1 + previous.xOffset : 0;\r\n      const yOffset = previous ? previous.yOffset : 0;\r\n\r\n      return [\r\n        ...acc,\r\n        {\r\n          ...current,\r\n          xOffset,\r\n          yOffset\r\n        }\r\n      ];\r\n    }, [])\r\n    // Ignore letters with no matches.\r\n    .filter(d => d.pixels);\r\n\r\n  // For each grid of pixels,\r\n  grids.forEach(grid => {\r\n    // get some properties,\r\n    const { pixels, xOffset, yOffset, width } = grid;\r\n\r\n    // get the image data this letter will occupy,\r\n    const imageData = ctx.getImageData(x + xOffset, y + yOffset, width, 6);\r\n    const { data } = imageData;\r\n\r\n    // and for each pixel,\r\n    pixels\r\n      .map((pixel, pixelIndex) => ({ pixel, pixelIndex }))\r\n      // ignore pixels set to 0,\r\n      .filter(d => d.pixel)\r\n      // and update the underlying canvas data.\r\n      .forEach(d => {\r\n        const offset = d.pixelIndex * 4;\r\n        data[offset + 0] = color[0];\r\n        data[offset + 1] = color[1];\r\n        data[offset + 2] = color[2];\r\n        data[offset + 3] = 255;\r\n      });\r\n\r\n    // And draw!\r\n    ctx.putImageData(imageData, x + xOffset, y + yOffset);\r\n  });\r\n};\r\n\r\nexport default printText;\r\n","import {readFileSync} from 'fs';\r\nimport clamp from 'lodash/clamp';\r\nimport isNil from 'lodash/isNil';\r\nimport colors from './colors';\r\nimport printText from \"./print\";\r\n\r\nlet gameCode = readFileSync(__dirname + \"/game.js\", 'utf-8');\r\n\r\nlet canvas = document.getElementById('game');\r\nlet ctx = canvas.getContext('2d');\r\n\r\nlet _cameraX = 0;\r\nlet _cameraY = 0;\r\n\r\nfunction camera(x = 0, y = 0) {\r\n  _cameraX = Math.floor(x);\r\n  _cameraY = Math.floor(y);\r\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n  ctx.translate(-_cameraX, -_cameraY);\r\n}\r\n\r\nfunction setPixel(x, y, c = 0) {\r\n  ctx.fillStyle = colors.rgb(c);\r\n  ctx.fillRect(Math.floor(x), Math.floor(y), 1, 1);\r\n}\r\n\r\nfunction sprite(x, y, spriteIndex, darken = 0, flipH = false, flipV = false) {\r\n  if (window.sprites[spriteIndex]) {\r\n    window.sprites[spriteIndex].slice(0, 8).forEach((cells, rowIndex) => {\r\n      cells.split('').forEach((color, colIndex) => {\r\n        if (color !== ' ') {\r\n          const clamped = clamp(+color - darken, 0, 7);\r\n          ctx.fillStyle = colors.rgb(clamped);\r\n          ctx.fillRect(\r\n            Math.floor(x) + (flipH ? 7 - colIndex : colIndex),\r\n            Math.floor(y) + (flipV ? 7 - rowIndex : rowIndex),\r\n            1,\r\n            1\r\n          );\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nfunction print(x, y, letters, c = 0) {\r\n  printText({\r\n    x: x - _cameraX,\r\n    y: y - _cameraY,\r\n    letters,\r\n    c,\r\n    ctx\r\n  });\r\n}\r\n\r\nfunction clear(c) {\r\n  ctx.save();\r\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n  if (!isNil(c)) {\r\n    ctx.fillStyle = colors.rgb(c);\r\n    ctx.fillRect(0, 0, 128, 128);\r\n  } else {\r\n    ctx.clearRect(0, 0, 128, 128);\r\n  }\r\n  ctx.restore();\r\n}\r\n\r\nwindow.initialState = \"\";\r\nwindow.draw = () => {};\r\nwindow.update = () => {};\r\nwindow.sprites = {};\r\n\r\nlet currentKeys = new Set();\r\n\r\ndocument.addEventListener('keydown', ({ key }) => currentKeys.add(key));\r\ndocument.addEventListener('keyup', ({ key }) => currentKeys.delete(key));\r\n\r\neval(gameCode);\r\n\r\nlet previousInput = {};\r\nlet state = window.initialState;\r\nfunction loop() {\r\n  let input = {};\r\n\r\n  let keyNames = {\r\n    \"up\": \"ArrowUp\",\r\n    \"right\": \"ArrowRight\",\r\n    \"down\": \"ArrowDown\",\r\n    \"left\": \"ArrowLeft\",\r\n    \"a\": \"a\",\r\n    \"b\": \"b\"\r\n  };\r\n\r\n  for (let key in keyNames) {\r\n    input[key] = currentKeys.has(keyNames[key]);\r\n    input[key + \"Pressed\"] = input[key] && !previousInput[key];\r\n    input[key + \"Released\"] = !input[key] && previousInput[key];\r\n  }\r\n  previousInput = input;\r\n\r\n  window.update(state, input);\r\n  window.draw(state);\r\n  requestAnimationFrame(loop);\r\n}\r\nrequestAnimationFrame(loop);\r\n"]}